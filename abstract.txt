Machine learning algorithms, especially deep learning models, gained a lot of attention from researchers and industry practitioners. The use cases of these models are often deployed on portable devices, like smartphones, tablets, or microcontrollers, as these are the devices that end users are most likely to have and use. These devices are generally getting more and more powerful in terms of performance; however, modern deep learning models are also getting bigger in size with an increasing number of trainable parameters, and require more computational power than ever, hence deployment on user’s edge devices is very challenging, both because of the memory footprint and computational constraints. Besides, privacy questions also arise when dealing with these devices, so it is often important that the data does not leave the users’ devices, and that the models run locally. This paper explores the portability of models created in the two biggest deep learning frameworks: PyTorch and TensorFlow. It considers three methods of porting such models: TensorFlow Lite, a mobile library for deploying TensorFlow models on iOS; PyTorch Mobile, a similar library to deploy PyTorch models on iOS; and Core ML Tools, a Python package to convert both TensorFlow and PyTorch models to Core ML, which is an Apple framework to integrate machine learning models on iOS. Besides portability, this paper also examines the performance of the ported models in terms of testing time and deployment. It mainly considers the prediction and load times of the models, and in the case of Core ML packages, compilation times, as these are the dominant time-consuming tasks when running predictions. The speed measurements are done on various iOS devices to give a broader speed analysis, and using various resources, like the GPU or the Neural Engine, where possible. Baseline measurements are also performed on an average hardware laptop (Apple M2 Pro chip, 32 GB RAM). Mostly models from the field of computer vision and natural language processing were considered. This comprehensive study searches for the best method for machine learning model deployment on the iOS operating system and can be a good starting point for industry practitioners and developers who face the same challenge.